#+TITLE: chart-svg

[[https://hackage.haskell.org/package/chart-svg][https://img.shields.io/hackage/v/chart-svg.svg]]
[[https://github.com/tonyday567/chart-svg/actions?query=workflow%3Ahaskell-ci][https://github.com/tonyday567/chart-svg/workflows/haskell-ci/badge.svg]]

A charting library.

* Usage

#+begin_src haskell
  import Chart
  let lines = fmap (uncurry Point) [[(0.0, 1.0), (1.0, 1.0), (2.0, 5.0)], [(0.0, 0.0), (3.2, 3.0)], [(0.5, 4.0), (0.5, 0)]]
  let style = zipWith (\w c -> LineA (defaultLineStyle & set #width w & set #color (palette1 c))) [0.015, 0.03, 0.01] [0..2]
  let lineChart = zipWith LineChart style lines
  writeChartSvg "lined.svg" $ mempty & set #charts (toTree Nothing lineChart)
#+end_src

* Examples


* Org-mode setup

#+begin_src haskell
:set -XOverloadedStrings
:set -Wno-type-defaults
:set prompt "> "
import Chart.Examples
#+end_src

